{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"8b3ff734dd6e08e0-LAX","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Fri, 16 Aug 2024 08:13:32 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=EPZFFYc6B1VCbvS8QWNLt2p7Nsnpmi9rRBiTW3wCH4jBN78hRQrxj6IqvH8vjI%2B4KhLEPpz6FWCj8aKlJJEL7XJn3IwhQ%2BKCJ9Kub%2BgsZ7FnoYOm6rwhC42y12vT8J%2FMycnb0Jx4n%2Fj0T9FZNn%2FoBRMjd0Gqrrw%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}